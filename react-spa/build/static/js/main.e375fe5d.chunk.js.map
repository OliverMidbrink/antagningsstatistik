{"version":3,"sources":["logo.svg","components/MyLineChart.js","components/AdmissionChanceIndicator.js","App.js","reportWebVitals.js","index.js"],"names":["processData","inputData","displayFilter","userHP","userBI","userBII","outputData","startMyLinesLaid","length","year","endYear","Date","getFullYear","term","item","find","element","undefined","data_points","name","parseFloat","includes","replace","push","error","console","log","MyLineChart","props","LineChart","width","height","data","programData","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","interval","angle","dx","dy","fontSize","YAxis","yAxisId","domain","Tooltip","Legend","Line","type","stroke","activeDot","r","connectNulls","dot","strokeWidth","mean","array","reduce","a","b","standardDeviation","values","avg","squareDiffs","map","value","diff","avgSquareDiff","stdDev","Math","sqrt","calculateAdmissionChances","HTData","VTData","relevantUserMetric","meanHT","slice","meanVT","stdHT","stdVT","message","isNaN","AdmissionChanceIndicator","style","paddingLeft","paddingRight","alignItems","justifyContent","textAlign","myTheme","createMuiTheme","palette","primary","main","StyledTableCell","withStyles","theme","head","backgroundColor","color","common","white","body","TableCell","StyledTableRow","root","TableRow","LoadingIndicator","usePromiseTracker","promiseInProgress","display","App","rightOffsetCloseButton","window","innerWidth","state","queryString","queryResults","kurskod","open","program","school","loading","handleSubmit","bind","handleSelection","handleSearchBarChange","handleModalClose","handleTextFieldChangeHP","handleTextFieldChangeBI","handleTextFieldChangeBII","updateRightOffset","myInput","React","createRef","addEventListener","event","preventDefault","queryURL","URL","searchParams","append","this","that","fetch","then","response","json","results","JSON","parse","setState","catch","err","trackPromise","rawData","comment","HT","VT","target","classes","ThemeProvider","className","padding","paddingBottom","elevation","Container","id","paddingTop","fontWeight","onSubmit","Paper","searchBar","marginTop","InputBase","input","placeholder","onChange","inputProps","IconButton","iconButton","aria-label","Button","variant","flex","marginBottom","TableContainer","table","Table","size","TableHead","align","TableBody","index","onClick","component","scope","Modal","aria-labelledby","aria-describedby","modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","maxHeight","overflow","square","paper","Divider","row","flexWrap","border","borderRadius","maxWidth","TextField","label","textField","position","background","Component","minHeight","flexFlow","marginRight","marginLeft","divider","outline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e375fe5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\n\r\nfunction processData(inputData, displayFilter, userHP, userBI, userBII) {\r\n  try {\r\n    var outputData = [];\r\n    //console.log(inputData);\r\n\r\n    var startMyLinesLaid = false;\r\n\r\n    if (inputData.length > 0) {\r\n\r\n      var year;\r\n      var endYear = new Date().getFullYear() + 1;\r\n      for (year = 2009; year < endYear; year++) {\r\n\r\n        var term;\r\n        for (term = 0; term < 2; term++){\r\n          var item = \"not found\";\r\n\r\n          if(term === 0){\r\n            // VT\r\n            item = inputData[2].find(element => element[0] === year);\r\n          } else {\r\n            // HT\r\n            item = inputData[1].find(element => element[0] === year);\r\n          }\r\n\r\n          //console.log(item);\r\n\r\n          if(item === \"not found\" || item === undefined) {\r\n            continue;\r\n          }\r\n\r\n          var data_points = {\r\n            name:item[1] + \" \" + item[0],\r\n          };\r\n    \r\n          if(parseFloat(item[2]) !== 'NaN' && displayFilter.includes(\"BI\")) data_points[\"BI\"] = parseFloat(item[2]);\r\n          if(parseFloat(item[3]) !== 'NaN' && displayFilter.includes(\"BII\")) data_points[\"BII\"] = parseFloat(item[3]);\r\n          if(parseFloat(item[4]) !== 'NaN' && displayFilter.includes(\"HP\")) data_points[\"HP\"] = parseFloat(item[4]);\r\n\r\n          if(item[2] === '*') data_points[\"BI\"] = 0;\r\n          if(item[3] === '*') data_points[\"BII\"] = 0;\r\n          if(item[4] === '*') data_points[\"HP\"] = 0;\r\n\r\n          // Add user values if they are valid\r\n          if(startMyLinesLaid === false) {\r\n            startMyLinesLaid = true;\r\n            if(userHP !== undefined) {\r\n              //console.log(userHP.replace(',', '.'));\r\n              data_points[\"Ditt HP\"] = parseFloat(userHP.replace(',', '.'));\r\n            }\r\n            if(userBI !== undefined) {\r\n              data_points[\"Ditt BI\"] = parseFloat(userBI.replace(',', '.'));\r\n            }\r\n            if(userBII !== undefined) {\r\n              data_points[\"Ditt BII\"] = parseFloat(userBII.replace(',', '.'));\r\n            }\r\n          }\r\n          \r\n          //console.log(data_points);\r\n          outputData.push(data_points);\r\n        }\r\n      }\r\n      \r\n      // Add user values if they are valid\r\n      if(userHP !== undefined) {\r\n        outputData[outputData.length - 1][\"Ditt HP\"] = parseFloat(userHP.replace(',', '.'));\r\n      }\r\n      if(userBI !== undefined) {\r\n        outputData[outputData.length - 1][\"Ditt BI\"] = parseFloat(userBI.replace(',', '.'));\r\n      }\r\n      if(userBII !== undefined) {\r\n        outputData[outputData.length - 1][\"Ditt BII\"] = parseFloat(userBII.replace(',', '.'));\r\n      }\r\n\r\n      return outputData;\r\n    } else {\r\n      \r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return inputData;\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default function MyLineChart(props) {\r\n  return (\r\n    <LineChart\r\n      width={props.width}\r\n      height={320}\r\n      data={processData(props.programData, props.displayFilter, props.userHP, props.userBI, props.userBII)}\r\n      margin={{\r\n        top: 10,\r\n        right: 25,\r\n        left: 0,\r\n        bottom: 15\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" interval={0} angle={-26} height={70} dx={-15} dy={10} fontSize={10}/>\r\n      <YAxis yAxisId=\"left\" domain={['auto', 'auto']}/>\r\n      <Tooltip />\r\n      <Legend />\r\n      {props.displayFilter.includes(\"BI\") &&\r\n        <Line\r\n          yAxisId=\"left\"\r\n          type=\"monotone\"\r\n          dataKey=\"BI\"\r\n          stroke=\"#8884d8\"\r\n          activeDot={{ r: 8 }}\r\n        />\r\n      }\r\n      {props.displayFilter.includes(\"BII\") &&\r\n        <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"BII\" stroke=\"#82ca9d\" />\r\n      }\r\n      \r\n      {props.displayFilter.includes(\"HP\") &&\r\n        <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"HP\" stroke=\"orange\" />\r\n      }\r\n      {props.displayFilter.includes(\"HP\") &&\r\n        <Line connectNulls yAxisId=\"left\" type=\"monotone\" dataKey=\"Ditt HP\" stroke=\"red\" dot={{r: 3}} strokeWidth=\"6\"/>\r\n      }\r\n      {props.displayFilter.includes(\"BI\") &&\r\n        <Line connectNulls yAxisId=\"left\" type=\"monotone\" dataKey=\"Ditt BI\" stroke=\"red\" dot={{r: 3}} strokeWidth=\"6\"/>\r\n      }\r\n      {props.displayFilter.includes(\"BII\") &&\r\n        <Line connectNulls yAxisId=\"left\" type=\"monotone\" dataKey=\"Ditt BII\" stroke=\"red\" dot={{r: 3}} strokeWidth=\"6\"/>\r\n      }\r\n    </LineChart>\r\n  );\r\n}","import React from \"react\";\r\n\r\nconst mean = (array) => {\r\n    if (array.length > 0) {\r\n        return array.reduce((a, b) => a + b) / array.length;\r\n    } else {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nfunction standardDeviation(values){\r\n    if(values.length === 0) {\r\n        return undefined;\r\n    }\r\n    var avg = mean(values);\r\n    \r\n    var squareDiffs = values.map(function(value){\r\n      var diff = value - avg;\r\n      var sqrDiff = diff * diff;\r\n      return sqrDiff;\r\n    });\r\n    \r\n    var avgSquareDiff = mean(squareDiffs);\r\n  \r\n    var stdDev = Math.sqrt(avgSquareDiff);\r\n\r\n    if(parseFloat(stdDev) === 'NaN') {\r\n        return undefined;\r\n    } else {\r\n        return stdDev;\r\n    }\r\n  }\r\n\r\n  // only userBI, userHP or userBII will be supplied at one time\r\nfunction calculateAdmissionChances(programData, userBI, userHP, userBII, displayFilter) {\r\n    try {\r\n        var HTData = [];\r\n        var VTData = [];\r\n\r\n        var relevantUserMetric = undefined;\r\n        if(userBI !== undefined) relevantUserMetric = parseFloat(userBI.replace(',', '.'));\r\n        if(userHP !== undefined) relevantUserMetric = parseFloat(userHP.replace(',', '.'));\r\n        if(userBII !== undefined) relevantUserMetric = parseFloat(userBII.replace(',', '.'));\r\n\r\n        if (programData.length > 0) {\r\n            var year;\r\n            var endYear = new Date().getFullYear() + 1;\r\n            for (year = 2009; year < endYear; year++) {\r\n\r\n            var term;\r\n            for (term = 0; term < 2; term++){\r\n                var item = \"not found\";\r\n\r\n                if(term === 0){\r\n                    // VT\r\n                    item = programData[2].find(element => element[0] === year);\r\n                } else {\r\n                    // HT\r\n                    item = programData[1].find(element => element[0] === year);\r\n                }\r\n\r\n                //console.log(item);\r\n\r\n                if(item === \"not found\" || item === undefined) {\r\n                    continue;\r\n                }\r\n\r\n                var data_points = {\r\n                    name:item[1] + \" \" + item[0],\r\n                };\r\n\r\n                if(parseFloat(item[2]) !== 'NaN' && item[2] !== \"*\") data_points[\"BI\"] = parseFloat(item[2]);\r\n                if(parseFloat(item[3]) !== 'NaN' && item[3] !== \"*\") data_points[\"BII\"] = parseFloat(item[3]);\r\n                if(parseFloat(item[4]) !== 'NaN' && item[4] !== \"*\") data_points[\"HP\"] = parseFloat(item[4]);\r\n\r\n                if(item[2] === '*') data_points[\"BI\"] = 0;\r\n                if(item[3] === '*') data_points[\"BII\"] = 0;\r\n                if(item[4] === '*') data_points[\"HP\"] = 0;\r\n                \r\n                if(term === 0) {\r\n                    VTData.push(data_points[displayFilter[0]]);\r\n                }\r\n                if(term === 1) {\r\n                    HTData.push(data_points[displayFilter[0]]);\r\n                    //console.log(data_points[displayFilter[0]]);\r\n                }\r\n            }\r\n            }\r\n            //console.log(HTData);\r\n            //console.log(VTData);\r\n            //console.log(displayFilter[0]);\r\n\r\n            const meanHT = mean(HTData.slice(HTData.length - 3, HTData.length)); // Average of last 3 values\r\n            const meanVT = mean(VTData.slice(VTData.length - 3, VTData.length));\r\n\r\n            const stdHT = standardDeviation(HTData);\r\n            const stdVT = standardDeviation(VTData);\r\n\r\n            //console.log(\"DATA\");\r\n            //console.log(meanHT);\r\n           // console.log(meanVT);\r\n           //console.log(stdHT);\r\n            //console.log(stdVT);\r\n            //console.log(relevantUserMetric);\r\n\r\n            var message = \"\";\r\n\r\n            if(relevantUserMetric === \"\" || isNaN(relevantUserMetric)) {\r\n                return \"fyll i rutan ovan för bedömning\";\r\n            }\r\n\r\n            if (meanHT !== undefined){\r\n                if(relevantUserMetric > meanHT + stdHT) {\r\n                    message += \"goda för HT\"\r\n                } else if(relevantUserMetric < meanHT - stdHT) {\r\n                    message += \"låga för HT\"\r\n                } else {\r\n                    message += \"medel för HT\"\r\n                }\r\n            }\r\n\r\n            if (meanVT !== undefined){\r\n                if (meanHT !== undefined){\r\n                    message += \" och \"\r\n                } \r\n\r\n                if(relevantUserMetric > meanVT + stdVT) {\r\n                    message += \"goda för VT\"\r\n                } else if(relevantUserMetric < meanVT - stdVT) {\r\n                    message += \"låga för VT\"\r\n                } else {\r\n                    message += \"medel för VT\"\r\n                }\r\n            }\r\n\r\n            return message;\r\n        } else {\r\n            \r\n        }\r\n    } catch (error) {\r\n        //console.log(error);\r\n        return \"fyll i dina uppgifter för bedömning\";\r\n    }\r\n}\r\n\r\nexport default function AdmissionChanceIndicator(props) {\r\n  return (\r\n      <div style={{paddingLeft:\"2em\", paddingRight: \"2em\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n          <p style={{textAlign: \"center\",}}>Dina antagningschanser med {props.displayFilter} är:</p>\r\n          <p style={{textAlign: \"center\",}}><b>{calculateAdmissionChances(props.programData, props.userBI, props.userHP, props.userBII, props.displayFilter)}</b></p>\r\n      </div>\r\n  );\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Input from '@material-ui/core/Input';\r\nimport React from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport MyLineChart from './components/MyLineChart';\r\nimport AdmissionChanceIndicator from './components/AdmissionChanceIndicator';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport {teal, } from '@material-ui/core/colors/blue';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst myTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#00b2b8\",\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#00686e\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 12,\r\n    paddingLeft:\"1.34em\",\r\n    paddingRight:\"0.2em\",\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: \"#f0f0f0\",\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles2 = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.common.white,\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    height: \"100%\",\r\n  },  \r\n  searchBar: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    marginRight: \"auto\",\r\n  },\r\n  input: {\r\n    marginLeft:0,\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n    align: \"right\",\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    maxWidth: \"1500px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    padding:0,\r\n    maxWidth: \"100%\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"80%\",\r\n    outline: 'none',\r\n  },\r\n});\r\n\r\nconst LoadingIndicator = props => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  return promiseInProgress && \r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n    </div>\r\n};\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var rightOffsetCloseButton = 0;\r\n    if(window.innerWidth > 1280) {\r\n      rightOffsetCloseButton = (window.innerWidth - 1280) / 2 + 8;\r\n    }\r\n\r\n    this.state = {\r\n      queryString: '',\r\n      queryResults: [],\r\n      kurskod: '',\r\n      open: false,\r\n      programData: [],\r\n      program: '',\r\n      school: '',\r\n      loading: false,\r\n      userHP: \"\",\r\n      userBI: \"\", \r\n      userBII: \"\",\r\n      right: rightOffsetCloseButton,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleSelection = this.handleSelection.bind(this);\r\n    this.handleSearchBarChange = this.handleSearchBarChange.bind(this);\r\n    this.handleModalClose = this.handleModalClose.bind(this);\r\n    this.handleTextFieldChangeHP = this.handleTextFieldChangeHP.bind(this);\r\n    this.handleTextFieldChangeBI = this.handleTextFieldChangeBI.bind(this);\r\n    this.handleTextFieldChangeBII = this.handleTextFieldChangeBII.bind(this);\r\n    this.updateRightOffset = this.updateRightOffset.bind(this);\r\n    this.myInput = React.createRef();\r\n\r\n    window.addEventListener('resize', this.updateRightOffset);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //alert('A name was submitted: ' + queryString);\r\n\r\n    var queryURL = new URL('http://68.183.10.8:5002/query');\r\n    queryURL.searchParams.append('q', this.state.queryString);\r\n\r\n    var that = this;\r\n\r\n    fetch(queryURL)\r\n    .then(response => response.json())\r\n    .then(function(data) {\r\n      const results = JSON.parse(data).results;\r\n      //console.log(results);\r\n\r\n      that.setState({queryResults: results});\r\n    }).catch(function(err) {\r\n      //console.log('Fetch problem: ' + err.message);\r\n    });\r\n  }\r\n\r\n  handleSelection(kurskod, program, school) {\r\n    var queryURL = new URL('http://68.183.10.8:5002/program_data');\r\n    queryURL.searchParams.append('q', kurskod);\r\n    queryURL.searchParams.append('school', school);\r\n    queryURL.searchParams.append('program', program);\r\n    //console.log(queryURL);\r\n\r\n    var that = this;\r\n    this.setState({open: true, loading: true});\r\n\r\n    trackPromise(\r\n      fetch(queryURL)\r\n      .then(response => response.json())\r\n      .then(function(data) {\r\n        const rawData = JSON.parse(data);\r\n        const programData = [[rawData.comment.length > 0? (rawData.comment):\"\"], rawData.HT.length > 0? rawData.HT:[\"Ingen statistik\"], rawData.VT.length > 0? rawData.VT:[\"Ingen statistik\"]];\r\n\r\n        that.setState({programData: programData, kurskod: kurskod, program: program, school: school, loading: false});\r\n\r\n        //console.log(programData);\r\n      }).catch(function(err) {\r\n        //console.log('Fetch problem: ' + err.message);\r\n    }));\r\n\r\n  }\r\n\r\n  handleTextFieldChangeHP(event) {\r\n    this.setState({\"userHP\": event.target.value});\r\n  }\r\n\r\n  handleTextFieldChangeBI(event) {\r\n    this.setState({\"userBI\": event.target.value});\r\n  }\r\n\r\n  handleTextFieldChangeBII(event) {\r\n    this.setState({\"userBII\": event.target.value});\r\n  }\r\n\r\n  handleSearchBarChange(event) {\r\n    this.setState({queryString: event.target.value});\r\n  }\r\n\r\n  handleModalClose() {\r\n    this.setState({open: false});\r\n  }\r\n\r\n  updateRightOffset() {\r\n    if(window.innerWidth > 1280) {\r\n      this.setState({right: (window.innerWidth - 1280) / 2 + 8});\r\n    } else {\r\n      this.setState({right: 0});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <ThemeProvider theme={myTheme}>\r\n        <div className={classes.root}>\r\n          <div style={{padding:\"1em\", backgroundColor: \"#00686e\", paddingBottom:0,}} elevation={2}>   \r\n          <Container id=\"header\">\r\n              <header className=\"App-header\">                  \r\n                <h3 style={{textAlign:\"left\", margin:0, padding:0, color: \"white\",}}>Se dina chanser att bli antagen!</h3>                \r\n                <h5 style={{textAlign:\"left\", margin:0, padding:0, paddingTop:\"0.5em\", color: \"#f5f5f5\", fontWeight: \"normal\",}}>\r\n                  Sök ett program, klicka och se dina chanser. </h5>\r\n              </header>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n              <Paper className={classes.searchBar} style={{textAlign:\"left\", marginTop: \"1em\",}} elevation={2}>\r\n                  <InputBase\r\n                    className={classes.input}\r\n                    placeholder=\"T.ex. Läkarprogrammet Karolinska\"\r\n                    value={this.queryString}\r\n                    type=\"search\"\r\n                    name=\"queryString\"\r\n                    onChange={this.handleSearchBarChange}\r\n                    inputProps={{ 'aria-label': 'sök efter utbildningar' }}\r\n                  />\r\n                  <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n              </Paper>\r\n              <Button type=\"submit\" variant=\"contained\" style={{backgroundColor:\"#00796e\", color:\"white\", marginTop: \"1em\",}}>\r\n                <b>Sök</b>\r\n              </Button>\r\n            </form>\r\n    \r\n          </Container>\r\n          </div>\r\n          \r\n          <div id=\"resultsBox\" style={{ flex: \"1 1 auto\", marginBottom: \"3em\"}}>\r\n            <Container>\r\n            {this.state.queryResults.length > 0 &&\r\n            <div>\r\n              <h2>Sökresultat</h2>\r\n                <TableContainer className={classes.table} display=\"false\">\r\n                  <Table size=\"small\" aria-label=\"customized table\">\r\n                    <TableHead>\r\n                      <StyledTableRow>\r\n                        <StyledTableCell>Program</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Skola</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Termin</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Program/Kurs</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">Kod</StyledTableCell>\r\n                      </StyledTableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {this.state.queryResults.map((item, index) => (\r\n                        <StyledTableRow className=\"TableRowHover\" key={index} onClick={() => this.handleSelection(item[3], item[2], item[4])}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {item[2]}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"left\">{item[4]}</StyledTableCell>\r\n                          <StyledTableCell align=\"left\">{item[0]}</StyledTableCell>\r\n                          <StyledTableCell align=\"left\">{item[1]}</StyledTableCell>\r\n                          <StyledTableCell align=\"left\">{item[3]}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            }\r\n            </Container>\r\n          </div>\r\n          \r\n    \r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={this.state.open}\r\n            onClose={this.handleModalClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n           \r\n            <Fade in={this.state.open}>\r\n              <div style={{maxHeight: \"100%\", overflow: \"auto\",}}>\r\n                <LoadingIndicator/>\r\n              <Paper square className={classes.paper}>\r\n                {!this.state.loading &&\r\n                <div>\r\n                  <Container>\r\n                    <h2 style={{marginBottom:\"0.1em\"}}>Statistik</h2>\r\n                    <h5 style={{marginTop:\"0.1em\", color:\"gray\",}}>{this.state.program} vid {this.state.school}</h5>\r\n                    <Divider />\r\n                    <h3 style={{marginBottom:\"0.2em\"}}>Senaste antagningsgränserna</h3>\r\n                    <h5 style={{marginTop:\"0.1em\", color:\"gray\",}}>Höstterminen urval 2</h5>\r\n                    {\r\n                        this.state.programData.slice(1, 2).map((item, index) => {\r\n                          return (\r\n                            <div>\r\n                              {\r\n                                item.slice(0, 1).map(row => {\r\n                                  if(row.length < 6) {\r\n                                    return(<p><b>{row[0]}</b>: &nbsp;&nbsp;BI {row[2]} &nbsp;&nbsp;&nbsp; BII {row[3]} &nbsp;&nbsp;&nbsp; HP {row[4]}</p>)\r\n                                  } else {\r\n                                    return(<p>{row}</p>)\r\n                                  }\r\n                                })\r\n                              }\r\n                            </div>\r\n                          )\r\n                        })\r\n                      }\r\n                      <p>Skrolla om du vill se äldre antagningsstatistik</p>\r\n                    <Divider />\r\n                    <h4 style={{marginBottom:\"0.2em\"}}>Fyll i rutorna för att se dina chanser</h4>\r\n                    <i style={{marginTop:\"0.1em\",}}>{this.state.programData[0]}</i>\r\n                  </Container>\r\n                  \r\n                  \r\n                  <div style={{display: \"flex\", flexWrap: \"wrap\", paddingTop:\"2em\",paddingBottom:\"1em\",}}>\r\n                    <div style={{border:\"1px solid gray\", borderRadius: \"5px\", margin:\"0.5em\", alignItems: \"center\", display: \"flex\", justifyContent: \"center\", flexWrap:\"wrap\", maxWidth:\"400px\",}}>\r\n                      <TextField label=\"Snittbetyg från gymnasiet\" style={{margin:\"auto\",marginTop:\"1em\", marginBottom:\"1em\",}}  variant=\"outlined\"\r\n                      placeholder=\"T.ex. 15,20\" className={classes.textField} value={this.state.userBI} onChange={this.handleTextFieldChangeBI} />\r\n\r\n                      <MyLineChart programData={this.state.programData} displayFilter={[\"BI\"]} width={300}\r\n                      userBI={this.state.userBI}/>\r\n\r\n                      <AdmissionChanceIndicator programData={this.state.programData} userBI={this.state.userBI} displayFilter={[\"BI\"]} />\r\n                    </div>\r\n                    \r\n                    <div style={{border:\"1px solid gray\", borderRadius: \"5px\", margin:\"0.5em\", alignItems: \"center\", display: \"flex\", justifyContent: \"center\", flexWrap:\"wrap\", maxWidth:\"400px\",}}>\r\n                      <TextField label=\"Ditt HP\" style={{margin:\"auto\",marginTop:\"1em\", marginBottom:\"1em\",}} placeholder=\"T.ex. 1,2\" variant=\"outlined\"\r\n                      className={classes.textField} name=\"userHP\" value={this.state.userHP} onChange={this.handleTextFieldChangeHP} />\r\n\r\n                      <MyLineChart programData={this.state.programData} displayFilter={[\"HP\"]} \r\n                      userHP={this.state.userHP} width={300}/>\r\n\r\n                      <AdmissionChanceIndicator programData={this.state.programData} userHP={this.state.userHP} displayFilter={[\"HP\"]}/>\r\n                    </div>\r\n\r\n                    <div style={{border:\"1px solid gray\", borderRadius: \"5px\", margin:\"0.5em\", alignItems: \"center\", display: \"flex\", justifyContent: \"center\", flexWrap:\"wrap\", maxWidth:\"400px\",}}>\r\n                      <TextField label=\"Betyg efter komvux\" style={{margin:\"auto\",marginTop:\"1em\", marginBottom:\"1em\",}} variant=\"outlined\"\r\n                      placeholder=\"T.ex. 17,1\" className={classes.textField} value={this.state.userBII} onChange={this.handleTextFieldChangeBII} />\r\n                      \r\n                      <MyLineChart programData={this.state.programData} displayFilter={[\"BII\"]} width={300}\r\n                      userBII={this.state.userBII}/>\r\n\r\n                      <AdmissionChanceIndicator programData={this.state.programData} userBII={this.state.userBII} displayFilter={[\"BII\"]}/>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  \r\n                  <Container>\r\n                    <Divider />\r\n                    <h4>Förklaring av kvoterna BI, BII och HP</h4>\r\n                    <p>Kvoten BI är till för dig som söker med dina gymnasiebetyg, BII för dig som har \r\n                      kompletterat ditt gymnasiebetyg och HP är för de som har gjort högskoleprovet. \r\n                      (PS. fler betygskvoter finns men dessa är inte vanliga bland dagens gymnasieelever). \r\n                      Siffrorna nedan visar statistik för Urval 2 visas. </p>\r\n                    \r\n                    <div>\r\n                      <Divider />\r\n                      <h3 style={{marginBottom:0,}}>Tabelldata</h3>\r\n                      {\r\n                        this.state.programData.slice(1, 3).map((item, index) => {\r\n                          return (\r\n                            <div>\r\n                              <h4>{[\"HT\", \"VT\"][index]}</h4>\r\n                              {\r\n                                item.map(row => {\r\n                                  if(row.length < 6) {\r\n                                    return(<p><b>{row[0]}</b>: &nbsp;&nbsp;BI {row[2]} &nbsp;&nbsp;&nbsp; BII {row[3]} &nbsp;&nbsp;&nbsp; HP {row[4]}</p>)\r\n                                  } else {\r\n                                    return(<p>{row}</p>)\r\n                                  }\r\n                                })\r\n                              }\r\n                              <br></br>\r\n                            </div>\r\n                          )\r\n                        })\r\n                      }\r\n                    </div>\r\n                    </Container>\r\n                      <Divider />  \r\n                    <Container>\r\n                    <p>Tänk på att detta bara är en indikation. Gör ditt bästa för att höja betygen och \r\n                      maximera dina chanser!</p>\r\n                  </Container>\r\n                  </div>\r\n                }\r\n                <IconButton aria-label=\"close icon\" style={{position:\"absolute\", right:this.state.right, top:\"0px\", background:\"white\", borderRadius: \"4px\",}} onClick={this.handleModalClose}>\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Paper>\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        \r\n          <footer style={{color: \"#ededed\", backgroundColor: \"#00686e\", alignItems: \"center\", display: \"flex\", justifyContent: \"center\", padding: \"0.3em\", paddingBottom: \"0.5em\",}}>\r\n            <p style={{padding: 0, margin:0}}>&copy; {new Date().getFullYear()} minachanser.se</p>\r\n          </footer>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles2)(App);\r\n/*export default withStyles(useStyles2)(MyLineChart);*/","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}